<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Maooer 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.geomin.demo.repository.PatientRepository">

    <resultMap id="VitalsMap" type="com.geomin.demo.domain.VitalsVO">
        <id property="vitalId" column="vital_id" />
        <result property="height" column="height" />
        <result property="weight" column="weight" />
        <result property="systolicBlood" column="systolic_blood" />
        <result property="diastolicBlood" column="diastolic_blood" />
        <result property="pulse" column="pulse" />
        <result property="vitalDate" column="vital_date" />
        <result property="temperature" column="temperature" />
        <result property="modifyDate" column="modify_date" />
        <result property="vitalModifier" column="vital_modifier" />
        <association property="patientVO" resultMap="patientMap" />
    </resultMap>

    <resultMap id="patientMap" type="com.geomin.demo.domain.PatientVO">
        <id property="patientId" column="patient_id" />
        <result property="patientName" column="patient_name" />
        <result property="identify" column="identify" />
        <result property="gender" column="gender" />
        <result property="phone" column="phone" />
        <result property="emergencyPhone" column="emergency_phone" />
        <result property="age" column="age" />
        <result property="bloodType" column="blood_type" />
        <result property="address" column="address" />
        <result property="addressDetail" column="address_detail" />
        <result property="postCode" column="post_code" />
    </resultMap>



    <select id="findByName" resultType="com.geomin.demo.domain.PatientVO" parameterType="String">
        SELECT
            *
        FROM
            patient
        WHERE
            PATIENT_NAME = #{patientName}
    </select>

    <!--특정(이름)환자 검색 목록 가져오기-->
    <select id="getPatientList" parameterType="com.geomin.demo.dto.RequestList" resultType="com.geomin.demo.domain.PatientVO">
        SELECT
            *
        FROM
            patient
        WHERE
            PATIENT_NAME = #{data.patientName}
        <if test="pageable.sort != null and !pageable.sort.isEmpty()">
            ORDER BY
            <foreach collection="pageable.sort" item="order" separator=",">
                ${order.property} #{order.direction}
            </foreach>
        </if>
        OFFSET #{pageable.offset} ROWS FETCH NEXT #{pageable.pageSize} ROWS ONLY
    </select>

    <!--특정(이름)환자 검색 목록 총 갯수-->
    <select id="getTotal" parameterType="com.geomin.demo.dto.PatientDTO" resultType="int">
        SELECT
            COUNT(*) tocnt
        FROM
            PATIENT
        WHERE
            PATIENT_NAME = #{patientName}
    </select>

    <!--환자의 마지막 pk 번호 가져오기-->
    <select id="getLastPatientId" resultType="int" >
        SELECT
            MAX(PATIENT_ID)
        FROM
            PATIENT
    </select>

    <!--새로운 환자 등록-->
    <insert id="addPatient" parameterType="com.geomin.demo.domain.PatientVO">
        INSERT INTO
            PATIENT
            (PATIENT_ID , PATIENT_NAME , IDENTIFY, GENDER, PHONE, EMERGENCY_PHONE,
             AGE, BLOOD_TYPE, ADDRESS, ADDRESS_DETAIL, POST_CODE)
        VALUES
            (#{patientId} + 1 , #{patientName}, #{identify}, #{gender}, #{phone}, #{emergencyPhone},
             #{age}, #{bloodType}, #{address}, #{addressDetail}, #{postCode})
    </insert>

    <!--특정조건(이름, 주민등록번호)으로 환자 정보 가져오기-->
    <select id="getPatient" parameterType="com.geomin.demo.domain.PatientVO" resultType="com.geomin.demo.domain.PatientVO">
        SELECT
            *
        FROM
            PATIENT
        WHERE
            PATIENT_NAME = #{patientName}
            AND
            IDENTIFY = #{identify}
    </select>

    <!--특정조건(patientId:pk)으로 환자 정보 수정하기-->
    <update id="updatePatient" parameterType="com.geomin.demo.domain.PatientVO">
        UPDATE
            PATIENT
        SET
            PATIENT_NAME = #{patientName} , IDENTIFY = #{identify} , GENDER = #{gender} ,
            PHONE = #{phone} , EMERGENCY_PHONE = #{emergencyPhone} ,
            AGE = #{age} , BLOOD_TYPE = #{bloodType} ,
            ADDRESS = #{address} , ADDRESS_DETAIL = #{addressDetail} , POST_CODE = #{postCode}
        WHERE
            PATIENT_ID = #{patientId}
    </update>

    <!--특정 조건(patientId:pk)으로 환자 정보 가져오기-->
    <select id="getPatientById" parameterType="int" resultType="com.geomin.demo.domain.PatientVO">
        SELECT
            *
        FROM
            PATIENT
        WHERE
            PATIENT_ID = #{patientId}
    </select>

    <!--특정환자(id)의 활력징후 검색 목록 가져오기-->
    <select id="getVitalsList" parameterType="com.geomin.demo.dto.RequestList" resultMap="VitalsMap">
        SELECT
            V.* , P.*
        FROM
            VITALS V
        JOIN
            PATIENT P
        ON
            V.PATIENT_ID = P.PATIENT_ID
        WHERE
            V.PATIENT_ID = #{data.patientId}
        <if test="pageable.sort != null and !pageable.sort.isEmpty()">
            ORDER BY
            <foreach collection="pageable.sort" item="order" separator=",">
                #{order.property} #{order.direction}
            </foreach>
        </if>
        OFFSET #{pageable.offset} ROWS FETCH NEXT #{pageable.pageSize} ROWS ONLY
    </select>

    <!--특정환자(id)의 활력징후 검색 목록 총 갯수-->
    <select id="getVitalsTotal" parameterType="int" resultType="int">
        SELECT
            COUNT(*) tocnt
        FROM
            VITALS
        WHERE
            PATIENT_ID = #{patientId}
    </select>

    <!--활력징후 마지막 pk 번호 가져오기-->
    <select id="geLastVitalId" resultType="int">
        SELECT
            IFNULL(MAX(VITAL_ID) , 0)
        FROM
            VITALS
    </select>

    <!--특정환자(id)의 활력징후 추가-->
    <insert id="addVitals" parameterType="com.geomin.demo.dto.VitalsDTO" >
        INSERT INTO
            VITALS
            (VITAL_ID, PATIENT_ID , HEIGHT, WEIGHT,
            SYSTOLIC_BLOOD, DIASTOLIC_BLOOD, PULSE,
            VITAL_DATE, TEMPERATURE)
        VALUES
            (#{lastVitalId} +1 , #{patientId} , #{height} , #{weight} ,
            #{systolicBlood} , #{diastolicBlood} , #{pulse}, #{vitalDate} , #{temperature})
    </insert>

    <!--특정 활력징후(vital_id)의 활력징후 추가-->
    <update id="updateVitals" parameterType="com.geomin.demo.dto.VitalsDTO">
        UPDATE
            VITALS
        SET
            HEIGHT = #{height} ,
            WEIGHT = #{weight} ,
            SYSTOLIC_BLOOD = #{systolicBlood} ,
            DIASTOLIC_BLOOD = #{diastolicBlood} ,
            PULSE = #{pulse} ,
            TEMPERATURE = #{temperature} ,
            MODIFY_DATE = #{modifyDate} ,
            VITAL_MODIFIER = #{vitalModifier}
        WHERE
            vital_id = #{vitalId}
    </update>

</mapper>